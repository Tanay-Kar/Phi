[LINE grammar C:C01 <Contents[< Function f args ["[< Token ID :: 'x' >' if self.value else f'< Token ID >]"]>, < Token ASSIGN :: 'ASSIGN' >' if self.value else f'< Token ASSIGN >, < Expression ((<FACTOR < Token NUMBER :: '1' >' if self.value else f'< Token NUMBER > sign=+> DIV <FACTOR < Token NUMBER :: '2' >' if self.value else f'< Token NUMBER > sign=+>) MULT (<FACTOR < Token ID :: 'x' >' if self.value else f'< Token ID > sign=+> CARET <FACTOR < Token NUMBER :: '2' >' if self.value else f'< Token NUMBER > sign=+>))>, < Token EOL :: 'EOL' >' if self.value else f'< Token EOL >]>]
[LINE grammar J:J05 <Contents[< Token INTG :: 'INTG' >' if self.value else f'< Token INTG >, < Function f args ["[< Token ID :: 'x' >' if self.value else f'< Token ID >]"]>, < Token WRT :: 'WRT' >' if self.value else f'< Token WRT >, < Token ID :: 'x' >' if self.value else f'< Token ID >, < Token FROM :: 'FROM' >' if self.value else f'< Token FROM >, < Expression 0>, < Token TO :: 'TO' >' if self.value else f'< Token TO >, < Expression 2>, < Token PLT :: 'PLT' >' if self.value else f'< Token PLT >, < Token EOL :: 'EOL' >' if self.value else f'< Token EOL >]>]
